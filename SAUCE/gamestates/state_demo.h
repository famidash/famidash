#pragma code-name(push, "XCD_BANK_02")
#pragma data-name(push, "XCD_BANK_02") 
#pragma rodata-name(push, "XCD_BANK_02")

const unsigned char Credits[351]={
	0x01,0xfe,0x01,0x3f,0xff,0x01,0x47,0x20,0x21,0x22,0x23,0x24,0x25,0x26,0x27,0x28,
	0x29,0x22,0x23,0x22,0x2b,0x2c,0x2c,0xff,0x01,0x0f,0x30,0x31,0x32,0x33,0x34,0x35,
	0x36,0x37,0x38,0x39,0x32,0x33,0x3a,0x3b,0x3c,0x3d,0xff,0x01,0x0f,0x40,0xff,0x42,
	0x43,0x44,0x45,0x46,0x47,0x48,0x49,0x42,0x43,0x4a,0x4b,0x4c,0x4c,0xff,0x01,0x2d,
	0xe1,0xee,0xff,0xf5,0xee,0xef,0xe6,0xe6,0xe9,0xe3,0xe9,0xe1,0xec,0xff,0xe4,0xe5,
	0xed,0xe1,0xeb,0xe5,0xff,0x01,0x0b,0xef,0xe6,0xff,0xe7,0xe5,0xef,0xed,0xe5,0xf4,
	0xf2,0xf9,0xff,0xe4,0xe1,0xf3,0xe8,0xff,0xe6,0xef,0xf2,0xff,0x01,0x0b,0xf4,0xe8,
	0xe5,0xff,0xe6,0xe1,0xed,0xe9,0xe3,0xef,0xed,0xe0,0xee,0xe5,0xf3,0xff,0xe2,0xf9,
	0xff,0x01,0x10,0xf4,0xe5,0xe1,0xed,0xff,0xe6,0xe1,0xed,0xe9,0xe4,0xe1,0xf3,0xe8,
	0x16,0xff,0x01,0x2f,0x18,0xf5,0xf3,0xe5,0xf2,0xf3,0xee,0xe9,0xf0,0xe5,0xf2,0xff,
	0x01,0x14,0x18,0xeb,0xe1,0xee,0xe4,0xef,0xf7,0xef,0xee,0xf4,0xf5,0xff,0x01,0x14,
	0x18,0xe1,0xec,0xe5,0xe6,0xf5,0xee,0xeb,0xf9,0xff,0x01,0x16,0x18,0xe1,0xec,0xe5,
	0xf8,0xed,0xf5,0xf3,0xe8,0xff,0x01,0x16,0x18,0xe6,0xe9,0xe3,0xf5,0xf3,0xff,0xed,
	0xe3,0xe8,0xef,0xf5,0xf3,0xe5,0xf0,0xec,0xe1,0xee,0xf4,0xff,0x01,0x0c,0x18,0xf6,
	0xe9,0xeb,0xf2,0xe9,0xee,0xef,0xf8,0xff,0x01,0x16,0x18,0xfa,0xe5,0xee,0xe9,0xf4,
	0xe8,0xd3,0xd0,0xd2,0xff,0x01,0x15,0x18,0xea,0xe1,0xe5,0xfa,0xf5,0xff,0x01,0x19,
	0x18,0xea,0xf2,0xef,0xf7,0xe5,0xe2,0xef,0xf9,0xff,0x01,0x37,0xe7,0xe5,0xef,0xed,
	0xe5,0xf4,0xf2,0xf9,0xff,0xe4,0xe1,0xf3,0xe8,0xff,0xe9,0xf3,0xff,0x01,0x0e,0x1f,
	0xd2,0xd0,0xd1,0xd3,0xff,0xf2,0xef,0xe2,0xf4,0xef,0xf0,0xff,0xe7,0xe1,0xed,0xe5,
	0xf3,0xff,0x01,0x2d,0xf0,0xec,0xf3,0xff,0xe4,0xef,0xee,0xf4,0xff,0xf3,0xf5,0xe5,
	0xff,0xf5,0xf3,0xff,0x9f,0x9e,0xff,0x01,0x26,0xfe,0x01,0x3f,0x00,0x01,0x09,0x55,
	0x01,0x03,0x00,0x01,0x24,0x0a,0x01,0x02,0x02,0x00,0x01,0x07,0x00,0x01,0x00
};


const unsigned char Credits2[354]={
	0x01,0xfe,0x01,0x3f,0xff,0x01,0x1a,0x0a,0x06,0x07,0x92,0x93,0xff,0x01,0x1b,0x08,
	0x09,0xa2,0xa3,0xff,0x01,0x02,0xed,0xf5,0xf3,0xe9,0xe3,0xff,0x01,0x14,0x2a,0x06,
	0x07,0xff,0x01,0x02,0xe3,0xf2,0xe5,0xe4,0xe9,0xf4,0xf3,0xff,0x01,0x13,0x08,0x09,
	0xff,0x01,0x1e,0x0c,0xff,0x01,0x02,0xe6,0xef,0xf2,0xe5,0xf6,0xe5,0xf2,0xe2,0xef,
	0xf5,0xee,0xe4,0xff,0x01,0x13,0xe4,0xea,0xf6,0xe9,0xff,0x01,0x1b,0xf7,0xe1,0xf4,
	0xe5,0xf2,0xe6,0xec,0xe1,0xed,0xe5,0xff,0x01,0x15,0xe4,0xea,0x18,0xee,0xe1,0xf4,
	0xe5,0xff,0x01,0x09,0xe3,0xef,0xed,0xed,0xf5,0xee,0xe9,0xf4,0xf9,0xff,0x01,0x05,
	0xef,0xe3,0xf5,0xec,0xe1,0xf2,0xee,0xe5,0xe2,0xf5,0xec,0xe1,0xff,0x01,0x06,0xe3,
	0xf2,0xe5,0xe4,0xe9,0xf4,0xf3,0xff,0x01,0x3a,0xf2,0xe5,0xe4,0xe7,0xe4,0xff,0x01,
	0x15,0xe2,0xe1,0xee,0xe1,0xee,0xe1,0xd6,0xd0,0x01,0x02,0xff,0x01,0x12,0xe2,0xec,
	0xe1,0xe3,0xe5,0xe3,0xe1,0xf0,0xf4,0xe1,0xe9,0xee,0xee,0xff,0x01,0x1a,0xe4,0xf4,
	0xf0,0xec,0xf3,0xff,0x01,0x17,0xe1,0xec,0xe5,0xe6,0xf5,0xee,0xeb,0xf9,0xff,0x01,
	0x19,0xf0,0xf3,0x15,0xec,0xef,0xec,0xff,0x01,0x13,0xee,0xef,0xf4,0xe1,0xf0,0xef,
	0xf4,0xe1,0xf4,0xef,0xd6,0xd4,0xff,0x01,0x13,0xe2,0xe9,0xe7,0xe6,0xec,0xef,0xf0,
	0xf0,0xe1,0xd3,0xd8,0xd5,0xff,0x01,0x16,0xfa,0xe5,0xe5,0x15,0xf3,0xe3,0xef,0xf4,
	0xf4,0xff,0x01,0x16,0xe1,0xe4,0xf2,0xec,0xf5,0xe3,0xd0,0xd9,0xd6,0xff,0x01,0x02,
	0x0d,0xff,0x01,0x11,0xe1,0xf1,0xf5,0xe1,0xed,0xe1,0xf2,0xe9,0xee,0xe5,0xff,0x01,
	0x02,0x06,0x07,0xff,0x01,0x14,0xf3,0xf4,0xf5,0xe4,0xf3,0xf8,0xff,0x01,0x02,0x08,
	0x09,0x2a,0xff,0x01,0x12,0xe3,0xec,0xef,0xf5,0xe4,0xd5,0xd4,0xff,0x01,0x02,0x2e,
	0x2f,0x06,0x07,0xff,0x01,0x1b,0x3e,0x3f,0x08,0x09,0x0b,0xff,0x01,0x1a,0xfe,0x01,
	0x3f,0x00,0x01,0x05,0x40,0x70,0x0a,0x01,0x02,0x00,0x01,0x03,0x4d,0x00,0x01,0x04,
	0xa0,0x01,0x02,0x00,0x01,0x0f,0x10,0x00,0x01,0x06,0xd7,0x10,0x00,0x01,0x0c,0x00,
	0x01,0x00
};


#include "defines/mainmenu_charmap.h"

#ifdef FLAG_ENABLE_VER_NUM
	#ifdef FLAG_BETA_BUILD
		const unsigned char ver[] = "DEMO";
	#else
		const unsigned char ver[] = " VER";
	#endif
#endif

const unsigned char palette_Credits[16]={ 0x11,0x0f,0x10,0x30,0x11,0x0f,0x2a,0x39,0x11,0x28,0x17,0x0f,0x11,0x0f,0x11,0x21 };

void state_demo(){
	mmc3_disable_irq();
	
    ppu_off();
	pal_bright(0);
    
    pal_bg(palette_Credits);
	


	vram_adr(NAMETABLE_A);
	vram_unrle(Credits);
	vram_adr(NAMETABLE_B);
	vram_unrle(Credits2);

	
	multi_vram_buffer_horz(ver, sizeof(ver)-1, NTADR_A(21,27));
	one_vram_buffer(FLAG_MAJ_VER, NTADR_A(26,27));
	#ifdef FLAG_BETA_BUILD
		one_vram_buffer(0x18, NTADR_A(27,27)); // dot
		one_vram_buffer(FLAG_MIN_VER, NTADR_A(28,27));
	#endif
	
	// __asm__("LDA mmc3PRG1Bank \nPHA ");
    // mmc3_set_prg_bank_1(0);
    // vram_adr(NAMETABLE_A);
	//    vram_unrle(dem_funnies);
    // __asm__("PLA \n JSR %v ", mmc3_set_prg_bank_1);

	oam_clear();
	mmc3_set_8kb_chr(MENUBANK);
	mmc3_set_2kb_chr_bank_0(0xFF);	
	mmc3_set_2kb_chr_bank_1(MOUSEBANK);	
	ppu_on_all();
	ppu_wait_nmi();

	pal_fade_to(0,4);
	tmp1 = 0;

	/*	Incomplete code for reproducing what is being screamed into the Famicom microphone
	(He forgor about the PCM bit)
	OG by UserSniper, commit 7e47f425
	POKE(0x4015, 0b00010000);
	while (1) {
		POKE(0x4011, fc_mic_poll()<<4);
	}
	*/
	ppu_wait_nmi();
	
	do {
		oam_clear();
       	crossPRGBankJump0(mouse_and_cursor);
		newrand();
	    kandoframecnt++;
		
		if (SRAM_VALIDATE[0] == 0x13 &&
			(joypad1.press || ((mouse.connected)
				? mouse.left_press || mouse.right_press
				: joypad2.press))) {
					gameState = 0x01; return;
		}
		ppu_wait_nmi();
		tmp1++;
	} while (tmp1 != 0);

	tmp1 = 0;
	do {
		oam_clear();
		crossPRGBankJump0(mouse_and_cursor);
		newrand();
	    kandoframecnt++;
       	    	
		if (SRAM_VALIDATE[0] == 0x13 &&
			(joypad1.press || ((mouse.connected)
				? mouse.left_press || mouse.right_press
				: joypad2.press))) {
				gameState = 0x01; return;
		}
		ppu_wait_nmi();
		tmp1++;
		set_scroll_x(tmp1<<2);
	} while (tmp1 < 64);

	tmp1 = 0;
	set_scroll_x(256);
	do {
		oam_clear();
		crossPRGBankJump0(mouse_and_cursor);
		newrand();
	    kandoframecnt++;
		if (SRAM_VALIDATE[0] == 0x13 &&
			(joypad1.press || ((mouse.connected)
				? mouse.left_press || mouse.right_press
				: joypad2.press))) {
					gameState = 0x01; return;
		}
		ppu_wait_nmi();
		tmp1++;
	} while (tmp1 != 0);
	
	gameState = 0x01; // validate save file before starting
	return; 
	
}

#pragma code-name(pop)
#pragma data-name(pop) 
#pragma rodata-name(pop)